# +---------------------------------------------------------------------------+
# | in/Makefile.in                                                            |
# |                                                                           |
# | Include Makefile to create PDF via xelatex                                |
# | - support Katakana                                                        |
# | - support Hiragana                                                        |
# | - support languages                                                       |
# |                                                                           |
# | Version: 0.1.6 (change inline MAKEFILE_VERSION)                           |
# |                                                                           |
# | Changes:                                                                  |
# |                                                                           |
# | 0.1.6 2022-09-07 Christian Külker <c@c8i.org>                             |
# |     - Support Inkscape version x < 1.0.0 > y                              |
# |     - Add dependency to t4mf                                              |
# | 0.1.5 2022-07-11 Christian Külker <c@c8i.org>                             |
# |     - Add release/publication goal                                        |
# |     - Add titleclean goal                                                 |
# |     - Improve cleaning temporary files                                    |
# |     - Moved ListOfJapaneseTechnicalTerms.tex into build dir               |
# |     - Improve error messages                                              |
# |     - Improve state handling (add STATE and stateclean)                   |
# |     - Add more "LaTeX" variables: JAUTHOR, JDEDICATION,...                |
# |     - Improve counting of JREVISION                                       |
# |     - Improve build more documents with 2 dimensions: jtopic + jlang      |
# |       by parsing MAKECMDGOALS and add 2 dimensions to make goals          |
# |     - Change usage goal by adding 2 dimensions: jtopic + jlang            |
# |     - Add buildclean goal                                                 |
# |     - Add tragetclean goal                                                |
# |     - Change realclean target to delete all PDFs                          |
# |     - Differentiate between build and development goals                   |
# |     - Split configuration information between Makefiles                   |
# | 0.1.4 2022-07-06 Christian Külker <c@c8i.org>                             |
# |     - Add JTERMS in usage                                                 |
# |     - Add xelatex version in usage                                        |
# |     - Improve usage section                                               |
# | 0.1.3 2022-06-24 Christian Külker <c@c8i.org>                             |
# |     - Remove exec of makeindex, now done by \usepakage{imakeidx}          |
# | 0.1.2 2020-07-19 Christian Külker <c@c8i.org>                             |
# |     - remove $(TERMS) related targets from realclean (should be devel)    |
# | 0.1.1 2020-07-19 Christian Külker <c@c8i.org>                             |
# |     - create $(TERMS) topic and language specific                         |
# | 0.1.0 2020-07-19 Christian Külker <c@c8i.org>                             |
# |     - initial release                                                     |
# |                                                                           |
# +---------------------------------------------------------------------------+
#
MAKEFILE_VERSION=0.1.5

# NO CHANGES BEYOND THIS POINT
#
# --- [ LINES ] ---------------------------------------------------------------
L:=============================================================================
l:=----------------------------------------------------------------------------
# --- [ DEFINITIONS ] ---------------------------------------------------------
define n


endef
# --- [ FUNCTIONS ] -----------------------------------------------------------
ERROR=$(n)$(L)$(n)ERROR:$(n)$(l)$(n)$1$(n)$(L)$(n)
# --- [ VARIABLES ] -----------------------------------------------------------
JTERMS=ListOfJapaneseTechnicalTerms.tex
STATE:=JTOPIC.tex JSCRIPT.tex JLANG.tex JPRINT.tex JSERIES.tex
STATE+=JVERSION.tex JVOLUME.tex JNUMBER.tex JAUTHOR.tex
STATE+=JTITLEJAPANESE.tex JSUBTITLEJAPANESE.tex JLANGUAGEJAPANESE.tex
STATE+=JTITLEORIGINAL.tex JSUBTITLEORIGINAL.tex JLANGUAGEORIGINAL.tex
STATE+=JDEDICATION.tex JLC.tex JREVISION.tex JDATE.tex JYEAR.tex JMONTH.tex
STATE+=JDAY.tex JEDITION.tex JPRINTINGS.tex JYEARS.tex JISBN.tex
LATEX:=xelatex
# MKIDX=makeindex -c # now \package{imakeidx}
XVERSION:=$(shell xelatex -version|egrep -e '^XeTeX')
SRC:=$(wildcard japanese*.tex)
USAGE:=$(filter usage,$(MAKECMDGOALS))
# Title
# make title_clean
# make ../share/title/hiragana/english/
# make ../share/title/hiragana/english/title-0.1.3.svg
# make ../share/title/hiragana/english/title-0.1.3.pdf
# creates title page PDF from template SVG
#      ../share/title/tpl/title-0.1.3.svg
#          -> ../share/title/hiragana/english/title-0.1.3.svg
#      ../share/title/hiragana/english/title-0.1.3.svg
#          -> ../share/title/hiragana/english/title-0.1.3.pdf
ifdef JTPL
TITLE_VER:=$(JTPL)
else
TITLE_VER:=0.1.4
endif
TITLE_DIR:=../share/title
TITLE_SVG:=title.svg
TITLE_PDF:=title.pdf
TITLE_TPL_DIR:=$(TITLE_DIR)/tpl
TITLE_TPL_SVG:=$(TITLE_TPL_DIR)/title-$(TITLE_VER).svg
TITLE_VAR:=JPRETITLEORIGINAL JTITLEORIGINAL JSUBTITLEORIGINAL
TITLE_VAR+=JLANGUAGEORIGINAL JTITLEJAPANESE JSUBTITLEJAPANESE
TITLE_VAR+=JLANGUAGEJAPANESE JVOLUME JVERSION JDATE JYEAR JMONTH JDAY
TITLE_VAR+=JEDITION JPRINTINGS JYEARS JISBN JSERIES
TITLE_SED:=$(foreach var,$(TITLE_VAR),s%$(var)%$($(var))%;)
ISV:=${shell inkscape --version 2>&1|grep Inkscape|sed -e 's%Inkscape \(.*\) (.*%\1%'|sed -e 's%Inkscape \(.*\) r.*%\1%'}
ISC:=$(shell ../t4mf/bin/t4mf-version-compare '$(ISV)' '1.0.0')
INKSCAPE:=$(shell if [ "$(ISC)" = "OK" ]; then echo '--export-type=pdf --export-filename='; else echo '--export-pdf=';fi)
#
# --- [ CHECKS ] --------------------------------------------------------------
ifndef MAKEFILE_VERSION
$(error $(call ERROR,MAKEFILE_VERSION is NOT defined))
endif
ifndef JVERSION
$(error $(call ERROR,JVERSION is NOT defined))
endif
ifndef JLANG
JLANG:=$(JLANG_DEFAULT)
endif
ifndef JDATE
JDATE:=$(JMONTH) $(JYEAR)
endif
# Count up JREVISION for each make goal
ifndef JREVISION    # if JREVISION is not defined
ifndef USAGE        # if not called as 'make usage'
ifdef MAKECMDGOALS  # if not called as 'make'
JREVISION:=$(shell if [ ! -f .JREVISION.$(JTOPIC).$(JLANG) ];then \
	echo -n 0>.JREVISION.$(JTOPIC).$(JLANG);fi;\
	bash -c 'R=`cat .JREVISION.$(JTOPIC).$(JLANG)`;let R++;\
	echo $$R>.JREVISION.$(JTOPIC).$(JLANG)';\
	cat .JREVISION.$(JTOPIC).$(JLANG))
endif
endif
endif
# --- [ DERIVED VARIABLES ] ---------------------------------------------------
BLD:=$(SRC:.tex=.pdf)
DST:=$(SRC:.tex=-$(JTOPIC)-$(JLANG).pdf)
PUB:=nihongo-$(JVOLUME)-the-japanese-script-$(JTOPIC)-$(JLANG)-$(JVERSION).pdf
# --- [ DERIVED CHECKS ] ------------------------------------------------------
ifndef DST
$(error $(call ERROR,DST is not defined))
endif
ifndef PUB
$(error $(call ERROR,PUB is not defined))
endif
ifndef JPRINT
JPRINT:=false
endif

.SUFFIXES: .tex .pdf
.PHONY: usage stateclean clean titleclean buildclean realclean pdf termsclean release

#usage: $(STATE) JDATE.tex
usage: $(STATE)
	@echo $(L)
	@echo "USAGE:"
	@echo $(l)
	@echo "  JTOPIC       [$(JTOPIC)] (choice from: hiragana|katakana)"
	@echo "  JLANG        [$(JLANG)]  possible for $(JTOPIC): $(JLC)"
	@echo $(l)
	@echo "  Japanese [$(JTITLEJAPANESE) $(JSUBTITLEJAPANESE) $(JTITLEORIGINAL)]"
	@echo "  Original [$(JPRETITLEORIGINAL) $(JTITLEORIGINAL) $(JSUBTITLEORIGINAL) $(JLANGUAGEORIGINAL)]"
	@echo $(l)
	@echo "  JSCRIPT      [$(JSCRIPT)] (derived from JTOPIC)"
	@echo "  JVERSION     [$(JVERSION)]"
	@echo "  JEDITION     [$(JEDITION)]"
	@echo "  JDATE        [$(JDATE)]"
	@echo "  JYEAR        [$(JYEAR)]"
	@echo "  JMONTH       [$(JMONTH)]"
	@echo "  JDAY         [$(JDAY)]"
	@echo "  JTERMS       [$(JTERMS)]"
	@echo "  JVOLUME      [$(JVOLUME)]"
	@echo "  SRC          [$(SRC)]"
	@echo "  BLD          [$(BLD)]"
	@echo "  DST          [$(DST)] (custom)"
	@echo "  PUB          [$(PUB)] (custom)"
	@echo "  JPRINT       [$(JPRINT)]"
	@echo "  INKSCAPE     [$(ISV)] version, ($(INKSCAPE))"
	@echo $(l)
	@echo "make                            - This text (with default values)"
	@echo "make usage                      - This text (with default values)"
	@echo "make JTOPIC JLANG usage         - This text (with custom values)"
	@echo "make hiragana english pdf       - create japanese-script-hiragana-english.pdf"
	@echo "make hiragana ngerman pdf       - create japanese-script-hiragana-ngerman.pdf"
	@echo "make katakana english pdf       - create japanese-script-katakana-english.pdf "
	@echo "make clean                      - clean up LaTeX"
	@echo "make buildclean                 - remove $(BLD)"
	@echo "make JTOPIC JLANG targetclean   - remove japanese-script-JTOPIC-JLANG.pdf"
	@echo "                                  current: $(DST)"
	@echo "make realclean                  - remove all PDF in current directory (*.pdf)"
#	@echo "make TOPIC LANG TARGET"
#	@echo "  TOPIC: hiragana|katakana"
#	@echo "  LANG:   english|ngerman"
#	@echo "  TARGET: clean realclean pdf usage"
	@echo $(l)
	@echo "make JTOPIC JLANG release - copy japanese-script-JTOPIC-JLANG.pdf to"
	@echo "                            ../pub/nihongo-JVOLUME-the-japanese-script-JTOPIC-JLANG-JVERSION.pdf"
	@echo $(L)
	@make JREVISION=0 stateclean > usage.log 2>&1

# --- [ State ] ---------------------------------------------------------------
# Need to execute bash to not convert \normalsize to \n to CR
$(STATE):
	@bash -c 'echo "\newcommand{\$(call lcall,$*)}{$($*)}"> $@'
	@if [ "$@" = "JLANG.tex" ];then echo "%SKIP">>$@;else echo '\include{$@}' >> JSTATE.tex;fi

# --- [ Clean ] ---------------------------------------------------------------
stateclean:
	rm -f JSTATE.tex
	rm -f $(STATE)
	if [ -f ngerman ];then rm ngerman;fi
	if [ -f english ];then rm english;fi
	if [ -f hiragana ];then rm hiragana;fi
	if [ -f katakana ];then rm katakana;fi
clean: stateclean
	rm -f *.aux
	rm -f *.idx
	rm -f *.ilg
	rm -f *.ind
	rm -f *.jtoc
	rm -f *.nav
	rm -f *.log
	rm -f *.lof
	rm -f *.lot
	rm -f *.out
	rm -f *.svn
	rm -f *.snm
	rm -f *.toc
	rm -f *.vrb
titleclean:
	if [ -f $(TITLE_SVG) ];then rm $(TITLE_SVG);fi
	if [ -f $(TITLE_PDF) ];then rm $(TITLE_PDF);fi
	if [ -d $(TITLE_DIR)/$(JTOPIC)/$(JLANG) ];then rmdir $(TITLE_DIR)/$(JTOPIC)/$(JLANG);fi
	if [ -d $(TITLE_DIR)/$(JTOPIC) ];then rmdir $(TITLE_DIR)/$(JTOPIC);fi
termsclean:
	rm -f $(JTERMS)
buildclean: clean titleclean termsclean
	rm -f $(BLD)
targetclean: buildclean
	rm -f $(DST)
realclean: buildclean
	rm -f *.pdf

# --- [ Development ] ---------------------------------------------------------
$(JTERMS):
	../bin/technical-terms --language=$(JLANG) -f=$(JTERMS) -d ../content
# PDF 1.4 file size approx 2MB
$(DST:.pdf=-pdf-1.4.pdf): pdf
	gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dNOPAUSE -dQUIET \
	  -dSubsetFonts=true -dEmbedAllFonts=true -dMaxSubsetPct=100 \
	  -dBATCH -sOutputFile=$@ \
	  $(DST)

# --- [ Build ] ---------------------------------------------------------------
$(TITLE_DIR)/$(JTOPIC)/$(JLANG):
	mkdir -p $@
$(TITLE_SVG): $(TITLE_DIR)/$(JTOPIC)/$(JLANG)
	cat $(TITLE_TPL_SVG)|sed -e 's%JAUTHOR%$(JAUTHOR)%'> $@
	sed -i -e '$(TITLE_SED)' $@
	touch $@
$(TITLE_PDF): $(TITLE_SVG)
	inkscape $<  $(INKSCAPE)$@
# japanese-script-katakana.pdf|japanese-script-hiragana.pdf
.tex.pdf:
	$(LATEX) $<
	#$(MKIDX) english.idx  # now run by \package{imakeidx}
	#$(MKIDX) german.idx   # now run by \packahe{imakeidx}
	#$(MKIDX) japanese.idx # now run by \package{imakeidx}
	$(LATEX) $<
	$(LATEX) $<
	cat $(SRC:.tex=.log)|grep Warning
# japanese-script-katakana-english.pdf japanese-script-katakana-ngerman.pdf
$(DST): $(TITLE_PDF) $(BLD)
	cp $< $@
# PDF 1.5 file size approx 1.6MB
pdf: $(JTOPIC)-$(JLANG).log $(STATE) $(JTERMS) $(DST)
	make stateclean

# --- [ Publish/ Release ] ----------------------------------------------------
../pub/$(PUB): $(DST)
	cp $< $@
../pub:
	mkdir $@
release: ../pub/$(PUB) | ../pub
